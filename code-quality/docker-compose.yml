version: "2"

services:
  # scanner:
  #   build:
  #     dockerfile: scanner.Dockerfile
  #     context: dockerfiles/
  #   # network_mode: service:sonarqube
  #   volumes:
  #     - ./playbooks:${PWD}/playbooks
  #     - scanner_cache:/root/.sonar
  #   working_dir: ${PWD}/playbooks
  #   #entrypoint: sonar-runner -Dsonar.login=admin -Dsonar.password=admin -Dsonar.host.url=http://sonar.playpit.net
  #   entrypoint: sonar-runner -Dsonar.host.url=http://sonar.playpit.net

  nginx:
    restart: always
    image: nginx:alpine
    networks:
      - sonarnet
    ports:
      - "80:80"
    volumes:
      - ./vhosts.conf:/etc/nginx/conf.d/default.conf

  jenkins:
    restart: always
    image: "jenkins/jenkins:2.159"
    group_add:
      - 993
    networks:
      - sonarnet
    ports:
      - "127.0.0.1:50000:50000"
    volumes:
      - jenkins:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - /usr/bin/docker:/usr/bin/docker
      - /lib64/libltdl.so.7:/usr/lib/x86_64-linux-gnu/libltdl.so.7
    environment:
      - JAVA_OPTS=
          -Djenkins.install.runSetupWizard=false
          -Djava.awt.headless=true
          -Dhudson.plugins.git.GitSCM.verbose=true
          -Dit.dockins.dockerslaves.spi.DockerDriver.verbose=true
          -XX:+DisableExplicitGC
          -Xms1000m
          -Xmx3000m
          -Dorg.apache.commons.jelly.tags.fmt.timeZone=UTC
          -Duser.timezone=Europe/London
          -Dhttps.protocols=TLSv1.2
          -Dorg.eclipse.jetty.server.Request.maxFormContentSize=5000000
          -Dhudson.plugins.parameterizedtrigger.ProjectSpecificParametersActionFactory.compatibility_mode=true
          -Dpermissive-script-security.enabled=true
          -XX:MaxMetaspaceSize=1g
          -XX:+CMSClassUnloadingEnabled
          -XX:+UseConcMarkSweepGC
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000

  sonarqube-init:
    build:
      dockerfile: sonarqube-init.Dockerfile
      context: dockerfiles/
    networks:
      - sonarnet
    volumes:
      - sonarqube_extensions:/opt/sonarqube/extensions

  sonarqube:
    image: sonarqube:lts
    networks:
      - sonarnet
    environment:
      - sonar.jdbc.username=sonar
      - sonar.jdbc.password=sonar
      - sonar.jdbc.url=jdbc:postgresql://db:5432/sonar
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
    depends_on:
      - sonarqube-init
      - db

  db:
    image: postgres
    networks:
      - sonarnet
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data

networks:
  sonarnet:
    driver: bridge

volumes:
  jenkins:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_extensions:
  postgresql:
  postgresql_data:
  # scanner_cache: